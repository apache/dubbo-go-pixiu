{
  "global": {
    "autoscalingv2API": true,
    "caAddress": "",
    "caName": "",
    "configCluster": false,
    "configValidation": true,
    "defaultNodeSelector": {},
    "defaultPodDisruptionBudget": {
      "enabled": true
    },
    "defaultResources": {
      "requests": {
        "cpu": "10m"
      }
    },
    "enabled": false,
    "externalIstiod": false,
    "hub": "apache",
    "imagePullPolicy": "",
    "imagePullSecrets": [],
    "istioNamespace": "istio-system",
    "istiod": {
      "enableAnalysis": false
    },
    "jwtPolicy": "third-party-jwt",
    "logAsJson": false,
    "logging": {
      "level": "default:info"
    },
    "meshID": "",
    "meshNetworks": {},
    "mountMtlsCerts": false,
    "multiCluster": {
      "clusterName": "",
      "enabled": false
    },
    "namespace": "istio-system",
    "network": "",
    "omitSidecarInjectorConfigMap": false,
    "oneNamespace": false,
    "operatorManageWebhooks": false,
    "pilotCertProvider": "istiod",
    "priorityClassName": "",
    "proxy": {
      "autoInject": "enabled",
      "clusterDomain": "cluster.local",
      "componentLogLevel": "misc:error",
      "enableCoreDump": false,
      "excludeIPRanges": "",
      "excludeInboundPorts": "",
      "excludeOutboundPorts": "",
      "holdApplicationUntilProxyStarts": false,
      "image": "dubbo-agent",
      "includeIPRanges": "*",
      "includeInboundPorts": "*",
      "includeOutboundPorts": "",
      "logLevel": "warning",
      "privileged": false,
      "readinessFailureThreshold": 30,
      "readinessInitialDelaySeconds": 1,
      "readinessPeriodSeconds": 2,
      "resources": {
        "limits": {
          "cpu": "2000m",
          "memory": "1024Mi"
        },
        "requests": {
          "cpu": "100m",
          "memory": "128Mi"
        }
      },
      "statusPort": 15020,
      "tracer": "zipkin"
    },
    "proxy_init": {
      "image": "dubbo-agent",
      "resources": {
        "limits": {
          "cpu": "2000m",
          "memory": "1024Mi"
        },
        "requests": {
          "cpu": "10m",
          "memory": "10Mi"
        }
      }
    },
    "remotePilotAddress": "",
    "sds": {
      "token": {
        "aud": "istio-ca"
      }
    },
    "sts": {
      "servicePort": 0
    },
    "tag": "latest",
    "tracer": {
      "datadog": {
        "address": "$(HOST_IP):8126"
      },
      "lightstep": {
        "accessToken": "",
        "address": ""
      },
      "stackdriver": {
        "debug": false,
        "maxNumberOfAnnotations": 200,
        "maxNumberOfAttributes": 200,
        "maxNumberOfMessageEvents": 200
      },
      "zipkin": {
        "address": ""
      }
    },
    "useMCP": false
  },
  "istio_cni": {
    "enabled": false
  },
  "revision": "",
  "sidecarInjectorWebhook": {
    "alwaysInjectSelector": [],
    "defaultTemplates": [],
    "enableNamespacesByDefault": false,
    "injectedAnnotations": {},
    "neverInjectSelector": [],
    "rewriteAppHTTPProbe": true,
    "templates": {
      "custom": "metadata:\n  annotations:\n    # Disable the built-in transformations. In the future we may want a template-level API\n    prometheus.istio.io/merge-metrics: \"false\"\n    sidecar.istio.io/rewriteAppHTTPProbers: \"false\"\n    foo: bar\nspec:\n  containers:\n  {{- range $index, $container := .Spec.Containers }}\n  - name: {{ $container.Name }}\n    env:\n    - name: SOME_ENV\n      value: \"true\"\n    - name: SOME_FILE\n      value: /var/lib/data/foo.json\n    volumeMounts:\n    - mountPath: /var/lib/data/foo.json\n      subPath: foo.json\n      name: some-injected-file\n  {{- end}}\n  volumes:\n  - name: some-injected-file\n    downwardAPI:\n      items:\n      - path: foo.json\n        fieldRef:\n          fieldPath: \"metadata.annotations['foo']\"\n"
    }
  }
}