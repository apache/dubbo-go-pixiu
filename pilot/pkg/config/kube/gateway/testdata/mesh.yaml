apiVersion: gateway.networking.k8s.io/v1alpha2
kind: GatewayClass
metadata:
  name: istio
spec:
  controllerName: istio.io/gateway-controller
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: gateway
  namespace: istio-system
spec:
  addresses:
  - value: istio-ingressgateway
    type: Hostname
  gatewayClassName: istio
  listeners:
  - name: default
    hostname: "*.example.com"
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: echo
  namespace: default
spec:
  parentRefs:
  - kind: Mesh
    name: istio
  hostnames: ["echo.default.svc.cluster.local"]
  rules:
  - backendRefs:
    - name: echo
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: echo
  namespace: default
spec:
  parentRefs:
  - kind: Mesh
    name: istio
  hostnames: ["some-sni.com"]
  rules:
  - backendRefs:
    - name: echo
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: dual # applies to mesh and explicit gateway
  namespace: default
spec:
  parentRefs:
  - kind: Mesh
    name: istio
  - name: gateway
    namespace: istio-system
  hostnames: ["foo.example.com"]
  rules:
  - backendRefs:
    - name: example
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: no-hostname
  namespace: default
spec:
  parentRefs:
  - kind: Mesh
    name: istio
  rules:
  - backendRefs:
    - name: example
      port: 80
